--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: messagingservice; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE messagingservice WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'Russian_Russia.1251' LC_CTYPE = 'Russian_Russia.1251';


ALTER DATABASE messagingservice OWNER TO postgres;

\connect messagingservice

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- Name: group_user; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE group_user AS ENUM (
    'admin',
    'user'
);


ALTER TYPE group_user OWNER TO postgres;

--
-- Name: addressbook_id_address_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE addressbook_id_address_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE addressbook_id_address_seq OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: addressbook; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE addressbook (
    id_address integer DEFAULT nextval('addressbook_id_address_seq'::regclass) NOT NULL,
    user_owner character varying(10) NOT NULL,
    to_user_fio character varying(40) NOT NULL,
    to_user_id character varying(10) NOT NULL
);


ALTER TABLE addressbook OWNER TO postgres;

--
-- Name: messages_id_message_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE messages_id_message_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE messages_id_message_seq OWNER TO postgres;

--
-- Name: messages; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE messages (
    id_message integer DEFAULT nextval('messages_id_message_seq'::regclass) NOT NULL,
    from_user_id character varying(10) NOT NULL,
    date_message timestamp without time zone NOT NULL,
    subject_message character varying(40) NOT NULL,
    text_message text NOT NULL,
    to_user_id character varying(10) NOT NULL,
    from_user_fio character varying(40) NOT NULL,
    to_user_fio character varying(40) NOT NULL
);


ALTER TABLE messages OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE users (
    login character varying(10) NOT NULL,
    fio_user character varying(40) NOT NULL,
    group_user text DEFAULT 'user'::text NOT NULL,
    password character varying(10) NOT NULL,
    enabled boolean DEFAULT true NOT NULL,
    email character varying(30) NOT NULL
);


ALTER TABLE users OWNER TO postgres;

--
-- Name: vs_database_diagrams; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE vs_database_diagrams (
    name character varying(80),
    diadata text,
    comment character varying(1022),
    preview text,
    lockinfo character varying(80),
    locktime timestamp with time zone,
    version character varying(80)
);


ALTER TABLE vs_database_diagrams OWNER TO postgres;

--
-- Data for Name: addressbook; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Name: addressbook_id_address_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('addressbook_id_address_seq', 1, false);


--
-- Data for Name: messages; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Name: messages_id_message_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('messages_id_message_seq', 1, false);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO users (login, fio_user, group_user, password, enabled, email) VALUES ('adminTest', 'namesTestUser', 'admin', 'testpass', true, 'vasya@mail.ru');
INSERT INTO users (login, fio_user, group_user, password, enabled, email) VALUES ('Ivanov', 'Иванов Михаил федорович', 'user', '123456', true, 'iv_1994@mail.ru');
INSERT INTO users (login, fio_user, group_user, password, enabled, email) VALUES ('Petrov', 'Петров Михаил Иванович', 'user', '123456', true, 'petr@amsvyaz.com');
INSERT INTO users (login, fio_user, group_user, password, enabled, email) VALUES ('Sidorov', 'Сидоров Юрий Степанович', 'user', '123456', true, 'syuriy@gmail.com');
INSERT INTO users (login, fio_user, group_user, password, enabled, email) VALUES ('Kurochkina', 'Курочкина Наталья Михайловна', 'user', '123456', true, 'kurochkina@fondamur.ru');


--
-- Data for Name: vs_database_diagrams; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO vs_database_diagrams (name, diadata, comment, preview, lockinfo, locktime, version) VALUES ('DiagramMessagingService', '', NULL, '', NULL, NULL, '14');


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (login);


--
-- Name: index_id_address; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_id_address ON addressbook USING btree (id_address);


--
-- Name: index_id_message; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_id_message ON messages USING btree (id_message);


--
-- Name: index_login; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX index_login ON users USING btree (login);


--
-- Name: FK_addressbook_users; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY addressbook
    ADD CONSTRAINT "FK_addressbook_users" FOREIGN KEY (user_owner) REFERENCES users(login) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: FK_messages_users_from; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY messages
    ADD CONSTRAINT "FK_messages_users_from" FOREIGN KEY (from_user_id) REFERENCES users(login) MATCH FULL;


--
-- Name: FK_messages_users_to; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY messages
    ADD CONSTRAINT "FK_messages_users_to" FOREIGN KEY (to_user_id) REFERENCES users(login) MATCH FULL;


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

